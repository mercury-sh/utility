# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

[*]
charset                  = utf-8
end_of_line              = lf
trim_trailing_whitespace = true
insert_final_newline     = true
indent_style             = space
indent_size              = 2
max_line_length          = 150

[*.{sln,csproj}]
end_of_line = crlf

[*.{cs,cshtml,razor}]
#### .NET Coding Conventions ####

# Organize using
dotnet_separate_import_directive_groups                                              = false
dotnet_sort_system_directives_first                                                  = true
file_header_template                                                                 = Copyright (c) Bruno Sales <me@baliestri.dev>. Licensed under the MIT License.\nSee the LICENSE file in the repository root for full license text.

# this. and Me. preferences
dotnet_style_qualification_for_event                                                 = false:suggestion
dotnet_style_qualification_for_field                                                 = false:suggestion
dotnet_style_qualification_for_method                                                = false:suggestion
dotnet_style_qualification_for_property                                              = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members                           = true
dotnet_style_predefined_type_for_member_access                                       = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators                              = always_for_clarity:none
dotnet_style_parentheses_in_other_operators                                          = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators                                   = always_for_clarity:none
dotnet_style_parentheses_in_relational_binary_operators                              = never_if_unnecessary:none

# Modifier preferences
dotnet_style_require_accessibility_modifiers                                         = for_non_interface_members:warning

# Expression-level preferences
dotnet_style_coalesce_expression                                                     = true
dotnet_style_collection_initializer                                                  = true
dotnet_style_explicit_tuple_names                                                    = true
dotnet_style_namespace_match_folder                                                  = true
dotnet_style_null_propagation                                                        = true
dotnet_style_object_initializer                                                      = true
dotnet_style_operator_placement_when_wrapping                                        = beginning_of_line
dotnet_style_prefer_auto_properties                                                  = true:suggestion
dotnet_style_prefer_compound_assignment                                              = true
dotnet_style_prefer_conditional_expression_over_assignment                           = true
dotnet_style_prefer_conditional_expression_over_return                               = true
dotnet_style_prefer_inferred_anonymous_type_member_names                             = true
dotnet_style_prefer_inferred_tuple_names                                             = true
dotnet_style_prefer_is_null_check_over_reference_equality_method                     = true
dotnet_style_prefer_simplified_boolean_expressions                                   = true
dotnet_style_prefer_simplified_interpolation                                         = true

# Field preferences
dotnet_style_readonly_field                                                          = true

# Parameter preferences
dotnet_code_quality_unused_parameters                                                = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions                                     = 0

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental                                 = false
dotnet_style_allow_statement_immediately_after_block_experimental                    = false

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere                                                           = true
csharp_style_var_for_built_in_types                                                  = true
csharp_style_var_when_type_is_apparent                                               = true

# Expression-bodied members
csharp_style_expression_bodied_accessors                                             = when_on_single_line
csharp_style_expression_bodied_constructors                                          = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers                                              = true
csharp_style_expression_bodied_lambdas                                               = true
csharp_style_expression_bodied_local_functions                                       = true
csharp_style_expression_bodied_methods                                               = when_on_single_line:suggestion
csharp_style_expression_bodied_operators                                             = when_on_single_line:suggestion
csharp_style_expression_bodied_properties                                            = true

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check                                = true
csharp_style_pattern_matching_over_is_with_cast_check                                = true
csharp_style_prefer_extended_property_pattern                                        = true
csharp_style_prefer_not_pattern                                                      = true
csharp_style_prefer_pattern_matching                                                 = true
csharp_style_prefer_switch_expression                                                = true

# Null-checking preferences
csharp_style_conditional_delegate_call                                               = true
csharp_style_prefer_parameter_null_checking                                          = true

# Modifier preferences
csharp_prefer_static_local_function                                                  = true
csharp_preferred_modifier_order                                                      = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async

# Code-block preferences
csharp_prefer_braces                                                                 = true
csharp_prefer_simple_using_statement                                                 = true
csharp_style_namespace_declarations                                                  = file_scoped:warning
csharp_style_prefer_method_group_conversion                                          = true

# Expression-level preferences
csharp_prefer_simple_default_expression                                              = true
csharp_style_deconstructed_variable_declaration                                      = true
csharp_style_implicit_object_creation_when_type_is_apparent                          = true
csharp_style_inlined_variable_declaration                                            = true
csharp_style_prefer_index_operator                                                   = true
csharp_style_prefer_local_over_anonymous_function                                    = true
csharp_style_prefer_null_check_over_type_check                                       = true
csharp_style_prefer_range_operator                                                   = true
csharp_style_prefer_tuple_swap                                                       = true
csharp_style_throw_expression                                                        = true
csharp_style_unused_value_assignment_preference                                      = discard_variable
csharp_style_unused_value_expression_statement_preference                            = discard_variable

# 'using' directive preferences
csharp_using_directive_placement                                                     = outside_namespace

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental    = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental               = false
csharp_style_allow_embedded_statements_on_same_line_experimental                     = true

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch                                                         = true
csharp_new_line_before_else                                                          = true
csharp_new_line_before_finally                                                       = true
csharp_new_line_before_members_in_anonymous_types                                    = true
csharp_new_line_before_members_in_object_initializers                                = false
csharp_new_line_before_open_brace                                                    = none
csharp_new_line_between_query_expression_clauses                                     = true

# Indentation preferences
csharp_indent_block_contents                                                         = true
csharp_indent_braces                                                                 = false
csharp_indent_case_contents                                                          = true
csharp_indent_case_contents_when_block                                               = false
csharp_indent_labels                                                                 = one_less_than_current
csharp_indent_switch_labels                                                          = true

# Space preferences
csharp_space_after_cast                                                              = false
csharp_space_after_colon_in_inheritance_clause                                       = true
csharp_space_after_comma                                                             = true
csharp_space_after_dot                                                               = false
csharp_space_after_keywords_in_control_flow_statements                               = true
csharp_space_after_semicolon_in_for_statement                                        = true
csharp_space_around_binary_operators                                                 = before_and_after
csharp_space_around_declaration_statements                                           = false
csharp_space_before_colon_in_inheritance_clause                                      = true
csharp_space_before_comma                                                            = false
csharp_space_before_dot                                                              = false
csharp_space_before_open_square_brackets                                             = false
csharp_space_before_semicolon_in_for_statement                                       = false
csharp_space_between_empty_square_brackets                                           = false
csharp_space_between_method_call_empty_parameter_list_parentheses                    = false
csharp_space_between_method_call_name_and_opening_parenthesis                        = false
csharp_space_between_method_call_parameter_list_parentheses                          = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses             = false
csharp_space_between_method_declaration_name_and_open_parenthesis                    = false
csharp_space_between_method_declaration_parameter_list_parentheses                   = false
csharp_space_between_parentheses                                                     = false
csharp_space_between_square_brackets                                                 = false

# Wrapping preferences
csharp_preserve_single_line_blocks                                                   = true
csharp_preserve_single_line_statements                                               = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity                        = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols                         = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style                           = begins_with_i

dotnet_naming_rule.types_should_be_pascalcase.severity                               = suggestion
dotnet_naming_rule.types_should_be_pascalcase.symbols                                = types
dotnet_naming_rule.types_should_be_pascalcase.style                                  = pascalcase

dotnet_naming_rule.non_field_members_should_be_pascalcase.severity                   = suggestion
dotnet_naming_rule.non_field_members_should_be_pascalcase.symbols                    = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascalcase.style                      = pascalcase

dotnet_naming_rule.private_or_internal_field_should_be_begins_with__.severity        = suggestion
dotnet_naming_rule.private_or_internal_field_should_be_begins_with__.symbols         = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_begins_with__.style           = begins_with__

dotnet_naming_rule.const_should_be_uppercase_with__.severity                         = suggestion
dotnet_naming_rule.const_should_be_uppercase_with__.symbols                          = const
dotnet_naming_rule.const_should_be_uppercase_with__.style                            = uppercase_with__

dotnet_naming_rule.async_method_rule.import_to_resharper                             = True
dotnet_naming_rule.async_method_rule.resharper_description                           = AsyncMethod
dotnet_naming_rule.async_method_rule.resharper_guid                                  = 56534345-6354-4473-9e8f-059491a529fa
dotnet_naming_rule.async_method_rule.severity                                        = warning
dotnet_naming_rule.async_method_rule.style                                           = upper_camel_case_async_style
dotnet_naming_rule.async_method_rule.symbols                                         = async_method_symbols

dotnet_naming_rule.constants_rule.import_to_resharper                                = as_predefined
dotnet_naming_rule.constants_rule.severity                                           = warning
dotnet_naming_rule.constants_rule.style                                              = all_upper_style
dotnet_naming_rule.constants_rule.symbols                                            = constants_symbols

dotnet_naming_rule.label_rule.import_to_resharper                                    = True
dotnet_naming_rule.label_rule.resharper_description                                  = Label
dotnet_naming_rule.label_rule.resharper_guid                                         = f02f8bb5-5518-4035-8c8f-b7dc53fa1f07
dotnet_naming_rule.label_rule.severity                                               = warning
dotnet_naming_rule.label_rule.style                                                  = upper_camel_case_underscore_tolerant_label_style
dotnet_naming_rule.label_rule.symbols                                                = label_symbols

dotnet_naming_rule.local_constants_rule.import_to_resharper                          = as_predefined
dotnet_naming_rule.local_constants_rule.severity                                     = warning
dotnet_naming_rule.local_constants_rule.style                                        = all_lower_style
dotnet_naming_rule.local_constants_rule.symbols                                      = local_constants_symbols

dotnet_naming_rule.private_constants_rule.import_to_resharper                        = as_predefined
dotnet_naming_rule.private_constants_rule.severity                                   = warning
dotnet_naming_rule.private_constants_rule.style                                      = all_upper_style
dotnet_naming_rule.private_constants_rule.symbols                                    = private_constants_symbols

dotnet_naming_rule.private_static_readonly_rule.import_to_resharper                  = as_predefined
dotnet_naming_rule.private_static_readonly_rule.severity                             = warning
dotnet_naming_rule.private_static_readonly_rule.style                                = lower_camel_case_style_1
dotnet_naming_rule.private_static_readonly_rule.symbols                              = private_static_readonly_symbols

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds                                     = interface
dotnet_naming_symbols.interface.applicable_accessibilities                           = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers                                   =

dotnet_naming_symbols.private_method.applicable_kinds                                = method
dotnet_naming_symbols.private_method.applicable_accessibilities                      = private
dotnet_naming_symbols.private_method.required_modifiers                              =

dotnet_naming_symbols.private_or_internal_field.applicable_kinds                     = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities           = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers                   =

dotnet_naming_symbols.types.applicable_kinds                                         = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities                               = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers                                       =

dotnet_naming_symbols.non_field_members.applicable_kinds                             = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities                   = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers                           =

dotnet_naming_symbols.const.applicable_kinds                                         = field, local
dotnet_naming_symbols.const.applicable_accessibilities                               = *
dotnet_naming_symbols.const.required_modifiers                                       = const

dotnet_naming_symbols.async_method_symbols.applicable_accessibilities                = local, public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.async_method_symbols.applicable_kinds                          = method
dotnet_naming_symbols.async_method_symbols.required_modifiers                        = async
dotnet_naming_symbols.async_method_symbols.resharper_applicable_kinds                = async_method
dotnet_naming_symbols.async_method_symbols.resharper_required_modifiers              = static, instance

dotnet_naming_symbols.constants_symbols.applicable_accessibilities                   = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.constants_symbols.applicable_kinds                             = field
dotnet_naming_symbols.constants_symbols.required_modifiers                           = const

dotnet_naming_symbols.label_symbols.applicable_accessibilities                       = local, public
dotnet_naming_symbols.label_symbols.applicable_kinds                                 =
dotnet_naming_symbols.label_symbols.resharper_applicable_kinds                       = label
dotnet_naming_symbols.label_symbols.resharper_required_modifiers                     = static, instance

dotnet_naming_symbols.local_constants_symbols.applicable_accessibilities             = *
dotnet_naming_symbols.local_constants_symbols.applicable_kinds                       = local
dotnet_naming_symbols.local_constants_symbols.required_modifiers                     = const

dotnet_naming_symbols.local_functions_symbols.applicable_accessibilities             = *
dotnet_naming_symbols.local_functions_symbols.applicable_kinds                       = local_function

dotnet_naming_symbols.private_constants_symbols.applicable_accessibilities           = private
dotnet_naming_symbols.private_constants_symbols.applicable_kinds                     = field
dotnet_naming_symbols.private_constants_symbols.required_modifiers                   = const

dotnet_naming_symbols.private_static_readonly_symbols.applicable_accessibilities     = private
dotnet_naming_symbols.private_static_readonly_symbols.applicable_kinds               = field
dotnet_naming_symbols.private_static_readonly_symbols.required_modifiers             = static, readonly

# Naming styles

dotnet_naming_style.pascalcase.required_prefix                                       =
dotnet_naming_style.pascalcase.required_suffix                                       =
dotnet_naming_style.pascalcase.word_separator                                        =
dotnet_naming_style.pascalcase.capitalization                                        = pascal_case

dotnet_naming_style.begins_with_i.required_prefix                                    = I
dotnet_naming_style.begins_with_i.required_suffix                                    =
dotnet_naming_style.begins_with_i.word_separator                                     =
dotnet_naming_style.begins_with_i.capitalization                                     = pascal_case

dotnet_naming_style.begins_with__.required_prefix                                    = _
dotnet_naming_style.begins_with__.required_suffix                                    =
dotnet_naming_style.begins_with__.word_separator                                     =
dotnet_naming_style.begins_with__.capitalization                                     = camel_case

dotnet_naming_style.camelcase.required_prefix                                        =
dotnet_naming_style.camelcase.required_suffix                                        =
dotnet_naming_style.camelcase.word_separator                                         =
dotnet_naming_style.camelcase.capitalization                                         = camel_case

dotnet_naming_style.uppercase_with__.required_prefix                                 =
dotnet_naming_style.uppercase_with__.required_suffix                                 =
dotnet_naming_style.uppercase_with__.word_separator                                  = _
dotnet_naming_style.uppercase_with__.capitalization                                  = all_upper

dotnet_naming_style.all_lower_style.capitalization                                   = all_lower
dotnet_naming_style.all_lower_style.word_separator                                   = _
dotnet_naming_style.all_upper_style.capitalization                                   = all_upper
dotnet_naming_style.all_upper_style.word_separator                                   = _

dotnet_naming_style.lower_camel_case_style.capitalization                            = camel_case
dotnet_naming_style.lower_camel_case_style_1.capitalization                          = camel_case
dotnet_naming_style.lower_camel_case_style_1.required_prefix                         = _

dotnet_naming_style.upper_camel_case_async_style.capitalization                      = pascal_case
dotnet_naming_style.upper_camel_case_async_style.required_suffix                     = Async

dotnet_naming_style.upper_camel_case_underscore_tolerant_label_style.capitalization  = pascal_case
dotnet_naming_style.upper_camel_case_underscore_tolerant_label_style.required_suffix = Label
dotnet_naming_style.upper_camel_case_underscore_tolerant_label_style.word_separator  = _

# ReSharper properties
resharper_align_multiple_declaration                                                 = true
resharper_align_multline_type_parameter_constrains                                   = true
resharper_constructor_or_destructor_body                                             = expression_body
resharper_csharp_empty_block_style                                                   = together_same_line
resharper_csharp_indent_size                                                         = 2
resharper_csharp_insert_final_newline                                                = true
resharper_csharp_keep_blank_lines_in_code                                            = 1
resharper_csharp_keep_blank_lines_in_declarations                                    = 1
resharper_csharp_tab_width                                                           = 2
resharper_csharp_use_indent_from_vs                                                  = false
resharper_csharp_wrap_after_declaration_lpar                                         = false
resharper_csharp_wrap_after_invocation_lpar                                          = false
resharper_csharp_wrap_before_declaration_rpar                                        = false
resharper_csharp_wrap_before_invocation_rpar                                         = false
resharper_force_chop_compound_do_expression                                          = true
resharper_force_chop_compound_if_expression                                          = true
resharper_force_chop_compound_while_expression                                       = true
resharper_keep_existing_embedded_arrangement                                         = false
resharper_local_function_body                                                        = expression_body
resharper_method_or_operator_body                                                    = expression_body
resharper_parentheses_non_obvious_operations                                         = none, bitwise, bitwise_inclusive_or, bitwise_exclusive_or, relational, shift, arithmetic, additive, multiplicative, bitwise_and
resharper_place_accessorholder_attribute_on_same_line                                = false
resharper_place_accessor_attribute_on_same_line                                      = false
resharper_place_field_attribute_on_same_line                                         = false
resharper_prefer_explicit_discard_declaration                                        = true
resharper_razor_always_use_end_of_line_brace_style                                   = true
resharper_wrap_before_eq                                                             = true
resharper_xmldoc_indent_size                                                         = 2
resharper_xmldoc_tab_width                                                           = 2
resharper_xmldoc_use_indent_from_vs                                                  = false
resharper_xml_indent_size                                                            = 2
resharper_xml_insert_final_newline                                                   = true
resharper_xml_space_before_self_closing                                              = false
resharper_xml_tab_width                                                              = 2
resharper_xml_use_indent_from_vs                                                     = false
resharper_csharp_indent_method_decl_pars                                             = none
resharper_csharp_wrap_before_first_type_parameter_constraint                         = true
resharper_indent_primary_constructor_decl_pars                                       = inside
resharper_keep_existing_declaration_parens_arrangement                               = true
resharper_keep_existing_primary_constructor_declaration_parens_arrangement           = true
resharper_keep_existing_switch_expression_arrangement                                = false
resharper_wrap_after_primary_constructor_declaration_lpar                            = false
resharper_wrap_before_arrow_with_expressions                                         = true
resharper_wrap_before_primary_constructor_declaration_lpar                           = false
resharper_wrap_before_primary_constructor_declaration_rpar                           = false
resharper_wrap_lines                                                                 = true

# ReSharper inspection severities
resharper_arrange_redundant_parentheses_highlighting                                 = hint
resharper_arrange_this_qualifier_highlighting                                        = hint
resharper_built_in_type_reference_style_for_member_access_highlighting               = hint
resharper_built_in_type_reference_style_highlighting                                 = hint
resharper_redundant_base_qualifier_highlighting                                      = warning
resharper_suggest_var_or_type_built_in_types_highlighting                            = hint
resharper_suggest_var_or_type_elsewhere_highlighting                                 = hint
resharper_suggest_var_or_type_simple_types_highlighting                              = hint
